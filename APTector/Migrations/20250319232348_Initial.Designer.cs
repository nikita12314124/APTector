// <auto-generated />
using APTector.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APTector.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250319232348_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APTector.Models.APTGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsFinancial")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("APTGroups");
                });

            modelBuilder.Entity("APTector.Models.APTGroupProcedure", b =>
                {
                    b.Property<int>("APTGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ProcedureId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("BusinessImpact")
                        .HasColumnType("float");

                    b.Property<double>("Criticality")
                        .HasColumnType("float");

                    b.Property<double>("Probability")
                        .HasColumnType("float");

                    b.HasKey("APTGroupId", "ProcedureId");

                    b.HasIndex("ProcedureId");

                    b.ToTable("APTGroupProcedures");
                });

            modelBuilder.Entity("APTector.Models.Matrix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MatrixName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Matrices");
                });

            modelBuilder.Entity("APTector.Models.Procedure", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("APTGroupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TechniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("APTGroupId");

                    b.HasIndex("TechniqueId");

                    b.ToTable("Procedures");
                });

            modelBuilder.Entity("APTector.Models.Tactic", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MatrixId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MatrixId");

                    b.ToTable("Tactics");
                });

            modelBuilder.Entity("APTector.Models.Technique", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TacticId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TacticId");

                    b.ToTable("Techniques");
                });

            modelBuilder.Entity("APTector.Models.APTGroupProcedure", b =>
                {
                    b.HasOne("APTector.Models.APTGroup", "APTGroup")
                        .WithMany("APTGroupProcedures")
                        .HasForeignKey("APTGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APTector.Models.Procedure", "Procedure")
                        .WithMany("APTGroupProcedures")
                        .HasForeignKey("ProcedureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("APTGroup");

                    b.Navigation("Procedure");
                });

            modelBuilder.Entity("APTector.Models.Procedure", b =>
                {
                    b.HasOne("APTector.Models.APTGroup", null)
                        .WithMany("Procedures")
                        .HasForeignKey("APTGroupId");

                    b.HasOne("APTector.Models.Technique", "Technique")
                        .WithMany("Procedures")
                        .HasForeignKey("TechniqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Technique");
                });

            modelBuilder.Entity("APTector.Models.Tactic", b =>
                {
                    b.HasOne("APTector.Models.Matrix", "Matrix")
                        .WithMany("Tactics")
                        .HasForeignKey("MatrixId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Matrix");
                });

            modelBuilder.Entity("APTector.Models.Technique", b =>
                {
                    b.HasOne("APTector.Models.Tactic", "Tactic")
                        .WithMany("Techniques")
                        .HasForeignKey("TacticId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tactic");
                });

            modelBuilder.Entity("APTector.Models.APTGroup", b =>
                {
                    b.Navigation("APTGroupProcedures");

                    b.Navigation("Procedures");
                });

            modelBuilder.Entity("APTector.Models.Matrix", b =>
                {
                    b.Navigation("Tactics");
                });

            modelBuilder.Entity("APTector.Models.Procedure", b =>
                {
                    b.Navigation("APTGroupProcedures");
                });

            modelBuilder.Entity("APTector.Models.Tactic", b =>
                {
                    b.Navigation("Techniques");
                });

            modelBuilder.Entity("APTector.Models.Technique", b =>
                {
                    b.Navigation("Procedures");
                });
#pragma warning restore 612, 618
        }
    }
}
